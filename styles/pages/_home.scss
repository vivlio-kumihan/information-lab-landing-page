@use "../globals/" as *;
@use "../parts/common" as *;

#container {
  position: relative;
  background-color: $cWhite;
  transition: 0.5s;
  z-index: 50;
}

// .sideを前面に出すためのローカル・スタッキング・コンテキストの親要素を仕掛ける。
#main-content {
  position: relative;
  z-index: 0;
  & main {
    position: relative;
    z-index: -1;
  }
}

// footerから先に作る。
// 内容がほぼ同じであれば、
// ハンバーガー・メニューのない構造が簡単なfooterから先に作り
// それをheaderに汎用するという方針。
// その際、同じものをコピーして持ってくることに何の違和感も持つ必要は全くない。
.header {
  @extend .content-width;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: $navHeight;
  z-index: 100;
  background-color: $cTheme;
  color: $cWhite;
  @include mq(lg) {
    display: flex;
    justify-content: space-between;
    max-width: unset;
    height: 70px;
    padding: 0 5%;
  }
  & a {
    font-size: 14px;
    color: $cWhite;
  }

  &.triggered {
    background-color: rgba($color: $cTheme, $alpha: 0.9);
    // 水平方向のオフセット 垂直方向のオフセット ぼかし距離 スプレッド距離 色
    box-shadow: 0 0 25px -10px rgba($color: $cBlack, $alpha: 1);
  }

  & > .logo-wrapper {
    display: none;
    @include mq(lg) {
      display: flex;
      align-items: center;
      gap: .25rem;
      & .logo {
        height: 80%;
        object-fit: contain;
        & > img {
          width: 100%;
          height: 100%;
        }
      }
    }
  }

  &__inner {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1em;
    height: 100%;
    @extend .content-width;
    @include mq(lg) {
      justify-content: flex-end;
    }
  }

  & a {
    display: flex;
    align-items: center;
    gap: 0.5em;
  }

  & .image-wrapper {
    &.ragistration {
      width: 30px;
    }
    &.mail {
      width: 28px;
    }
    &.location {
      width: 30px;
    }
  }

  &__nav {
    @extend .flex;
    text-align: center;
    justify-content: space-between;
    align-items: center;
    // display: none;
    @include mq(lg) {
      display: block;
    }

    & > ul {
      @extend .flex;
      gap: 20px;
      margin: 10px 0 20px;
      @include mq(md) {
        flex-direction: row;
        gap: 30px;
        align-items: center;
      }
      & > li {
        & > a {
          color: $cSubTitle;
          text-transform: uppercase;
        }
      }
    }
  }
}

.main-visual {
  @include bg($image: "../images/main-visual-sm.png");
  background-size: contain;
  height: 450px;
  @include mq(md) {
    position: relative;
    @include bg($image: "../images/main-visual-pc.png");
    height: 900px;
    background-size: unset;
  }
}

.lead {
  &__copy-pc {
    display: none;
    @include mq(md) {
      display: block;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: 18px;
      text-align: center;
      font-feature-settings: "palt" 1;
    }
  }
  &__copy-sm {
    text-align: center;
    font-weight: 900;
    color: #666;
    @include mq(md) {
      display: none;
    }
  }
  &__era-location {
    display: none;
    @include mq(md) {
      display: flex;
      justify-content: center;
      gap: 1em;
      position: absolute;
      bottom: -40px;
      left: 50%;
      transform: translateX(-50%);
      width: 100%;
      & .era-wrapper {
        display: flex;
        align-items: flex-end;
        gap: .5rem;
      }
      & .lead__spec-item.location.for-pc {
        flex-basis: 425px;
      }
    }
    & .time {
      height: 70px;
    }
    & .content {
      font-size: 24px;
      font-weight: 900;
      & div {
        display: inline-block;
      }
    }
    & .add-pict {
      position: relative;
      &::after {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        right: -2.5em;
        content: "";
        background-image: url(../images/link-icon-map.png);
        width: 56px;
        height: 18px;
      }        
    }
  }
  &__era {
    display: flex;
    justify-content: center;
    gap: 0.75rem;
    margin-top: 2.5rem;
    @include mq(md) {
      display: none;
    }
  }
  &__spec {
    @extend .content-width;
    margin-top: 2rem;
    @include mq(md) {
      max-width: 480px;
      margin-top: 4rem;
    }
  }
  &__spec-item {
    display: flex;
    align-items: center;
    gap: .5em;
    line-height: 1.3;
    &:not(:first-of-type) {
      margin-top: 1rem;
    }
    & > .image-wrapper {
      flex-basis: 30px;
    }
    &.capacity {
      & .add-sm {
        @include mq(md) {
          display: none;
        }
      }
    }
    & .content {
      flex-basis: calc(100% - 30px);
      color: #55698E;
      font-feature-settings: "palt" 1;
      &__copy {
        margin-top: .25em;
        font-size: 11px;
        text-align: justify;
        color: #666;
        line-height: 1.5;
      }
    }
    &.location.for-sm {
      @include mq(md) {
        display: none;
      }
      & > .content {
        font-size: 20px;
        font-weight: 900;
      }
    }
    &.target {
      align-items: flex-start
    }
  }
}

.information {
  margin-top: 2.5rem;
  padding: 0 1rem;
  text-align: center;

  & .lead-visual {
    @include bg($image: "../images/catch-for-all-by-al_sm.png");
    background-size: contain;
    height: 200px;
    @include mq(md) {
      background-image: url("../images/catch-for-all-by-al_pc.png");
      height: 100px;
    }
  }

  & .part-one,
  & .part-two,
  & .to-email,
  & .access {
    & .image-wrapper {
      display: flex;
      justify-content: center;
    }
  }

  & .part-one {
    & > .content__copy {
      & > .for-sm {
        @include mq(md) {
          display: none;
        }
      }
    }
  }
  & .part-two {
    margin-top: 1.5rem;
    @include mq(md) {
      width: 90%;
      margin: 1.5rem auto 0;
      max-width: $contentMaxWidth;
    }
    & > .content__copy {
      text-align: justify;
      @include mq(md) {
        text-align: center;
      }
      & > span {
        text-align: center;
      }
    }
  }

  & .content {
    &__copy {
      color: #666;
      & > span {
        display: block;
        margin-bottom: .5em;
        font-size: 11px;
      }
    }
  }

  & .btn-ragistration,
  & .to-email,
  & .access {
    @extend .content-width;
    margin-top: 2rem;
    & .content__copy {
      font-weight: 900;
      font-feature-settings: "palt" 1;
      color: #777;
      line-height: 1.2;
      & > span {
        margin: .5em 0 0;
        font-weight: 500;
        line-height: 2;
      }
    }
  }

  & .btn-ragistration {
    display: flex;
    justify-content: center;
  }

  & .to-email,
  & .access {
    line-height: 2;
    & .add-pict {
      display: inline-block;
      position: relative;
      margin-top: .25em;
      padding-right: 1em;
      &::after {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        right: -0.25em;
        content: "";
        background-image: url(../images/link-pict.svg);
        width: 14px;
        height: 14px;
      }
    }
  }

  & .access {
    margin-bottom: 4rem;
    & > .content__copy {
      & > .image-wrapper {
        width: 100%;
        margin: 0 auto;
        object-fit: contain;
        @include mq(md) {
          width: 50%;
        }
      }

    }
  }
}

.travel {
  @extend .content-width;
  @extend .mb-lg;
  // インナーの影が配置画像で隠れてしまう件、
  // 『ローカル・・・コンテキスト』を使って
  // z-indexの値で要素を管理する。
  // 1. 『ローカル・コンテキスト』の領域を確保する。
  //     position: relative;
  //     z-index: 0;
  // 2. 背面に送りたい要素に対して、
  //     position: relative;
  //     z-index: -1;
  // これだけ！！！　知らなかった。。。
  &__inner {
    // 『ローカル・コンテキスト』親要素をオン。
    position: relative;
    z-index: 0;
    @extend .flex;
    justify-content: space-between;
    padding: 15px;
    background-color: $cBgGray;
    @include mq(md) {
      padding: 50px;
    }
    @include mq(xl) {
      padding: 50px 150px;
    }
  }
  &__img {
    height: 300px;
    @extend .mb-sm;
    transition: box-shadow 1s ease 2.2s;
    // ローカル・コンテキストのやり方
    // // 現在、『ローカル・コンテキスト』をオン。
    // // // 影を擬似要素にする時は外す。
    // &::before {
    //   position: absolute;
    //   top: 0;
    //   left: 0;
    //   width: 100%;
    //   height: 100%;
    //   content: '';
    //   box-shadow: inset 0 0 30px $cBlack;
    //   opacity: 0;
    //   z-index: 3;
    // }
    // &.inview::before {
    //   // @include anime($name: opacity, $dur: 1.75s, $dly: 2.5s);
    // }
    @include mq(md) {
      flex-basis: 47%;
    }
    @include mq(lg) {
      height: 400px;
    }
    &.inview {
      box-shadow: inset 0 0 30px $cBlack;
    }
    & > img {
      opacity: 1;
      // 『ローカル・コンテキスト』子要素オン。
      position: relative;
      z-index: -1;

      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  &__texts {
    @extend .pb-sm;
    @include mq(md) {
      display: flex;
      align-items: flex-end;
      flex-basis: 47%;
    }
    &.inview {
      & .travel__title::before {
        @include anime($name: scaleX, $dur: 0.8s, $dly: 1.6s);
      }
    }
  }
  &__title {
    position: relative;
    &::before {
      display: none;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      left: -120px;
      content: "";
      width: 100px;
      height: 1px;
      background-color: $cBlack;
      transform: scaleX(0);
      z-index: 2;
      transform-origin: right;
      // これもそう。考え方！
      // 初期状態を作る => メディアクエリで切り替えたい=>スマホ表示はなし、
      // PCで有りとなったときにこう書けるか？
      @include mq(lg) {
        display: block;
      }
    }
  }
  &__description {
    @include mq(lg) {
      margin-bottom: 40px;
    }
  }
}

@keyframes scaleX {
  0% {
    transform: scaleX(0);
  }
  100% {
    transform: scaleX(1);
  }
}

@keyframes opacity {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.houses {
  @extend .content-width;
  @extend .mb-lg;
  &__inner {
    @extend .flex;
  }
  &__item {
    @include mq(md) {
      // 『display: flex;』の場合、
      // 要素（この場合は画像）を包含する要素の横幅の指定は、
      // 『flex-basis』で設定する。
      @include mq(md) {
        flex-basis: 50%;
        margin-bottom: 20px;
      }
      @include mq(lg) {
        margin-bottom: 60px;
      }
    }
  }
  &__title {
    @extend .mb-sm;
    @extend .font-lr;
  }
  &__btn {
    text-align: center;
    // 『display: flex;』なので、
    // 『flex-basis』を100％としてセンタリングというわけ。
    // 考え方を変える。
    flex-basis: 100%;
  }
}

.popular {
  // セクション全体の左右にマージンを設けたい。
  // 背景のアミは左右いっぱいまでにしたレイアウトを
  // 実現させるためのアイデア。

  // あえて、『__inner』要素を設けてその擬似要素へ
  // 色をつける作戦。
  // なお、上下自由な位置から末端までアミを広げるネタも
  // 入っている。CSS必見。

  // そしてそして、小見出しが外れることはよくある。
  // その場合は小見出しにマージンを適用させる。
  &__header {
    @extend .content-width;
  }
  &__inner {
    position: relative;
    z-index: 2;
    &::before {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 90%;
      background-color: $cBgGray;
    }
  }
  &__container {
    // 背景画像のz-indexの前後の操作について、
    // 思い込みを無くす。
    // z-indexを使いたい『ためだけに』
    // position: relative;
    // を使っていい。
    position: relative;
    @extend .flex;
    @extend .content-width;
    z-index: 2;
    @include mq(md) {
      justify-content: space-between;
    }
  }
  &__item {
    // 要素（イメージなど）をflexでレイアウトしている時に、
    // 間隔を調整したい時の要領。
    @include mq(md) {
      flex-basis: 47%;
    }
    @include mq(lg) {
      flex-basis: 25%;
    }
    @include mq(xl) {
      flex-basis: 23%;
    }
  }
  &__img {
    height: 150px;
    margin-bottom: 5px;
    @include mq(lg) {
      height: 335px;
    }
    & > img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      // 画像の位置を変えることができるプロパティ
      // object-position: top;
    }
  }
  &__title {
    @extend .mb-sm;
    @extend .font-md;
  }
  &__btn {
    // ここも大事、反対のことをやりがち。
    // 上の『houses』と同じ記述をしている。
    // それは構わない。
    // 共通化より、修正のしやすさを優先しているから。
    text-align: center;
    flex-basis: 100%;
    @extend .mb-lg;
  }
}

// .main-contentに囲まれた、
// .side.left, main, .side.right　となっている位置関係を
// ローカル・スタッキング・コンテキストで解決する。
// .main-contentにローカル・スタッキング・コンテキストをかけて、
// .sideにz-indexを1で解決
.side {
  position: fixed;
  top: 70%;
  transform: translateY(-50%);
  transition: all ease 0.5s;
  visibility: hidden;
  opacity: 0;
  @include mq(xl) {
    &.inview {
      visibility: visible;
      opacity: 1;
      &.left {
        left: 50px;
      }
      &.right {
        right: 50px;
      }
    }
  }
  & .animate-title {
    position: relative;
    vertical-align: middle;
    letter-spacing: 2px;
    color: $cBlack;
  }
}

.footer {
  padding: 30px 0;
  background-color: $cTheme;
  & a {
    color: $cWhite;
  }
  & .logo-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1em;
  }
  &__copyright {
    margin-top: 1em;
    padding-right: 60px;
    text-align: center;
  }
}

.modal {

}